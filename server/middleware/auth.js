const jwt = require('jsonwebtoken');const dotenv = require('dotenv');dotenv.config();const auth = (req, res, next) => {  const authHeader = req.header('Authorization');  if (!authHeader || !authHeader.startsWith('Bearer ')) {    console.log('Auth Error: No Bearer token found in Authorization header');    return res.status(401).json({ message: 'No token, authorization denied' });  }  try {    const token = authHeader.split(' ')[1];    const decoded = jwt.verify(token, process.env.JWT_SECRET);    req.user = decoded;     console.log('Token verified, user attached:', req.user);    next();  } catch (err) {    console.error('Token verification error:', err.message);    res.status(401).json({ message: 'Token is not valid' });  }};const admin = (req, res, next) => {  if (req.user && req.user.userType === 'admin') {    next();  } else {    res.status(403).json({ message: 'Access denied. Admin privileges required.' });  }};module.exports = { auth, admin }; 